// Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
// or more contributor license agreements. Licensed under the Elastic License;
// you may not use this file except in compliance with the Elastic License.

// Code generated by "stringer -type=ChangeType,Trigger -linecomment -output client_v2_strings.go"; DO NOT EDIT.

package client

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[UnitChangedAdded-0]
	_ = x[UnitChangedModified-1]
	_ = x[UnitChangedRemoved-2]
}

const _ChangeType_name = "unit_addedunit_modifiedunit_removed"

var _ChangeType_index = [...]uint8{0, 10, 23, 35}

func (i ChangeType) String() string {
	if i < 0 || i >= ChangeType(len(_ChangeType_index)-1) {
		return "ChangeType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _ChangeType_name[_ChangeType_index[i]:_ChangeType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TriggeredConfigChange-1]
	_ = x[TriggeredFeatureChange-2]
	_ = x[TriggeredLogLevelChange-4]
	_ = x[TriggeredStateChange-8]
}

const (
	_Trigger_name_0 = "config_change_triggeredfeature_change_triggered"
	_Trigger_name_1 = "log_level_triggered"
	_Trigger_name_2 = "state_change_triggered"
)

var (
	_Trigger_index_0 = [...]uint8{0, 23, 47}
)

func (i Trigger) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _Trigger_name_0[_Trigger_index_0[i]:_Trigger_index_0[i+1]]
	case i == 4:
		return _Trigger_name_1
	case i == 8:
		return _Trigger_name_2
	default:
		return "Trigger(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
